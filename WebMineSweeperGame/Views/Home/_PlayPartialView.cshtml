@model MineSweeperAPI.Models.Game

<div class="row">
    <div class="col-md-8">
        <div class="grid-container">
            @for (int i = 0; i < Model.MineCellCollection.Count(); i++)
            {
                if (i % Model.XDimension == 0 && i != 0)
                {
                @:</div>
                @:<div class="grid-container">
                }

                var cell = Model.MineCellCollection[i];

                if (cell.IsRevealed)
                {
                    if (cell.Exploded)
                    {
                        <div class="mine-cell"><img src="~/images/explosion.png" alt="image" class="img-bomb" /></div>
                    }
                    else if (cell.IsBomb)
                    {
                        <div class="mine-cell"><img src="~/images/bomb.png" alt="image" class="img-bomb" /></div>
                    }
                    else if (cell.NumberOfAdjacentBombs != 0)
                    {
                        <div class="mine-cell number-cell">@cell.NumberOfAdjacentBombs</div>
                    }
                    else
                    {
                        <div class="mine-cell"></div>
                    }
                }
                else if (cell.MarkedAsBomb)
                {
                    <a class="mine-cell button-cell" id="@cell.ArrayPostion" data-bomb-marked="true"><img src="~/images/flag.png" alt="image" class="img-flag" /></a>
                }
                else
                {
                    <a class="mine-cell button-cell" id="@cell.ArrayPostion" data-bomb-marked="false"></a>
                }
            }
        </div>
    </div>
    <div class="col-md-4">
        @if (Model.GameIsWon)
        {
            <div><img src="~/images/youWin.jpg" /></div>
        }
    </div>
</div>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        $('.button-cell').mousedown(function (event) {

            var model = {
                gameId:  "@Model.Id",
                arrayPosition: $(this).attr("id")
            };

            switch (event.which) {
                case 1:
                    ActionOverCell(model, "RevealCell");
                    break;
                case 3:
                    model.markedAsBomb = !$(this).data("bomb-marked");
                    ActionOverCell(model, "MarkAsBomb");
                    break;
            }
        });

        $('.button-cell').contextmenu(function () {
            return false;
        });
    });

    function ActionOverCell(model, action) {
        var urlAction;
        switch (action) {
            case "RevealCell":
                urlAction = '@Url.Action("RevealCell", "Home")';
                break;
            case "MarkAsBomb":
                urlAction = '@Url.Action("MarkAsBomb", "Home")';
                break;
        }

        $.ajax({
            type: "POST",
            url: urlAction,
            data: model,
            success: function (result, status, xhr) {
                $("#mainDiv").html(result);
            },
            error: function (xhr, status, error) {
                $("#mainDiv").html("Result: " + status + " " + error + " " + xhr.status + " " + xhr.statusText)
            }
        });
    }

</script>
